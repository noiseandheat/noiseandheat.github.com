<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: unit testing | Noise & Heat]]></title>
  <link href="http://noiseandheat.github.com/blog/categories/unit-testing/atom.xml" rel="self"/>
  <link href="http://noiseandheat.github.com/"/>
  <updated>2012-11-16T00:08:28+00:00</updated>
  <id>http://noiseandheat.github.com/</id>
  <author>
    <name><![CDATA[David Wagner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[FlexUnit Visual Listener]]></title>
    <link href="http://noiseandheat.github.com/blog/2011/07/flexunit-visual-listener/"/>
    <updated>2011-07-18T16:18:00+01:00</updated>
    <id>http://noiseandheat.github.com/blog/2011/07/flexunit-visual-listener</id>
    <content type="html"><![CDATA[<p>Let's face it, we all use Flash and AS3 because we like pretty eye candy.
Otherwise we'd just use a real language.</p>

<!--more-->


<p>In light of that, I've never been particularly happy with the standard
AS3 FlexUnit listener you get when you aren't running inside FlashBuilder. Trace
statements are <em>so</em> last century. Also, they give me flashbacks to embedded C
programming, and I have to go and brick a firmware. I'm running out of phones.</p>

<p>So, in place of trace, I present: Green Dots (a.k.a. <a href="https://github.com/mnem/flexunit_visual_listener">FlexUnit Visual Listener</a>):</p>

<p><a href="https://github.com/mnem/flexunit_visual_listener"><img class="center" src="/images/2_0_portfolio1.png" width="630" height="420"></a></p>

<p>They're totally contemporary, work with any dress and are a stylish addition
to every modern CI system. They even give you some useful error information
when you roll the mouse over the test result dot (which you can copy to the
clipboard by clicking. Awesome!).</p>

<p>Bonus! It's simple to use too. Here's an example:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (example_flexunitvisuallistener.as)</span> <a href='/downloads/code/example_flexunitvisuallistener.as'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='as'><span class='line'><span class="kd">package</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">noiseandheat</span><span class="p">.</span><span class="nx">flexunit</span><span class="p">.</span><span class="nx">visuallistener</span><span class="p">.</span><span class="nx">VisualListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">flexunit</span><span class="p">.</span><span class="nx">internals</span><span class="p">.</span><span class="nx">TraceListener</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">flexunit</span><span class="p">.</span><span class="nx">runner</span><span class="p">.</span><span class="nx">FlexUnitCore</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">fluint</span><span class="p">.</span><span class="nx">uiImpersonation</span><span class="p">.</span><span class="nx">VisualTestEnvironmentBuilder</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">flash</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nb">Sprite</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">flash</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nb">StageAlign</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">flash</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nb">StageScaleMode</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">import</span> <span class="nx">flash</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nb">Event</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nx">SWF</span><span class="p">(</span><span class="nx">backgroundColor</span><span class="o">=</span><span class="s2">&quot;#000000&quot;</span><span class="o">,</span> <span class="nx">frameRate</span><span class="o">=</span><span class="s2">&quot;120&quot;</span><span class="o">,</span> <span class="nx">width</span><span class="o">=</span><span class="s2">&quot;800&quot;</span><span class="o">,</span> <span class="nx">height</span><span class="o">=</span><span class="s2">&quot;600&quot;</span><span class="p">)]</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nx">TestRunner</span> <span class="kd">extends</span> <span class="nb">Sprite</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="k">var</span> <span class="nx">core</span><span class="o">:</span><span class="nx">FlexUnitCore</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">private</span> <span class="k">var</span> <span class="nx">listener</span><span class="o">:</span><span class="nx">VisualListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">function</span> <span class="nx">TestRunner</span><span class="p">()</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">core</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlexUnitCore</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">VisualTestEnvironmentBuilder</span><span class="p">.</span><span class="nx">getInstance</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">listener</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">VisualListener</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">addChild</span><span class="p">(</span><span class="nx">listener</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">core</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="nx">listener</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Add a trace listener too if you want some trace output core.addListener(new</span>
</span><span class='line'>            <span class="nx">TraceListener</span><span class="p">(</span><span class="mi">800</span><span class="o">,</span> <span class="mi">600</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">core</span><span class="p">.</span><span class="nx">run</span><span class="p">(</span><span class="nx">NoiseAndHeatSuite</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">addEventListener</span><span class="p">(</span><span class="nb">Event</span><span class="p">.</span><span class="nx">ADDED_TO_STAGE</span><span class="o">,</span> <span class="nx">addedToStage</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">protected</span> <span class="kd">function</span> <span class="nx">addedToStage</span><span class="p">(</span><span class="nx">event</span><span class="o">:</span><span class="nb">Event</span><span class="p">)</span><span class="o">:</span><span class="nx">void</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">removeEventListener</span><span class="p">(</span><span class="nb">Event</span><span class="p">.</span><span class="nx">ADDED_TO_STAGE</span><span class="o">,</span> <span class="nx">addedToStage</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">stage</span><span class="p">.</span><span class="nx">align</span> <span class="o">=</span> <span class="nb">StageAlign</span><span class="p">.</span><span class="nx">TOP_LEFT</span><span class="o">;</span>
</span><span class='line'>            <span class="nx">stage</span><span class="p">.</span><span class="nx">scaleMode</span> <span class="o">=</span> <span class="nb">StageScaleMode</span><span class="p">.</span><span class="nx">NO_SCALE</span><span class="o">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>It's similar to the normal FlexUnit runner example, but with the addition of
the VisualListener and stage tweaks.</p>

<p>Grab it while it's hot from: <a href="https://github.com/mnem/flexunit_visual_listener">https://github.com/mnem/flexunit_visual_listener</a>.</p>
]]></content>
  </entry>
  
</feed>
